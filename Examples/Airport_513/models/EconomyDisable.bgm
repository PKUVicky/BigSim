# Controls
%active Airport : 0;
%active Checkin : 0;
%active Security : 0;
%active PassagewayToShop : 0;
%passive ShoppingZone : 0;
%active GateLounge : 0;
%active ApronZone : 0;
%active Passenger : 2;
%active Ticket : 1;
%active Danger : 0;
%active Airplane : 0;
%active BoardingPass : 1;
%active ClaimTag : 0;
%active CheckinLuggage : 0;



# Rules
%rule r_enter_airport Airport.$0 | Passenger[isDisable:edge,isEconomy:edge].$1 | $2 -> Airport.($0 | Passenger[isDisable:edge,isEconomy:edge].$1) | $2{SysClk:2	React:Passenger	Rand:true};

%rule r_enter_checkin Airport.($0 | Passenger[isDisable:edge,isEconomy:edge].$1 | Checkin.$2) -> Airport.($0 | Checkin.($2 | Passenger[isDisable:edge,isEconomy:edge].$1)) {SysClk:2	React:Passenger	Rand:true};

#should arrive ahead of 30mins before the boardingTime
%rule r_check_ticket_without_Luggage Checkin.($0 | Passenger[isDisable:edge,isEconomy:edge].($1 | Ticket[idle])) -> Checkin.($0 | Passenger[isDisable:edge,isEconomy:edge].($1| Ticket[bp:edge] | BoardingPass[bp:edge])) {SysClk:2	React:Passenger	Cond:ap.boardingTime-SysClk>3,Passenger.hasCheckinLuggage=='false'	Rand:true};

#if passenger has checkin luggage
%rule r_check_ticket_with_Luggage Checkin.($0 | Passenger[isDisable:edge,isEconomy:edge].($1| CheckinLuggage | Ticket[idle])) -> Checkin.($0 | Passenger[isDisable:edge,isEconomy:edge].($1| Ticket[bp:edge] | BoardingPass[bp:edge] | ClaimTag)) {SysClk:2	React:Passenger	Cond:ap.boardingTime-SysClk>3,Passenger.hasCheckinLuggage=='true'	Expr:Passenger.fee=Passenger.fee+10	Rand:true};

%rule r_enter_security Airport.($0 | Checkin.($1 | Passenger[isDisable:edge,isEconomy:edge].($2 | Ticket[bp:edge] | BoardingPass[bp:edge])) | Security.$3) -> Airport.($0 | Checkin.$1 | Security.($3 | Passenger[isDisable:edge,isEconomy:edge].($2| Ticket[bp:edge] | BoardingPass[bp:edge]))) {SysClk:2	React:Passenger	Rand:true};

%rule r_check_danger Security.($0 | Passenger[isDisable:edge,isEconomy:edge].($1 | Danger)) -> Security.($1|Passenger[isDisable:edge,isEconomy:edge].$1) {SysClk:3	React:Passenger	Cond:Passenger.hasDanger=='true'	Expr:Passenger.hasDanger='false'	Rand:true};

%rule r_enter_shoppingzone Airport.($0 | Security.($1 | Passenger[isDisable:edge,isEconomy:edge].$2) | ShoppingZone.$3) -> Airport.($0 | Security.$1 | ShoppingZone.($3 | Passenger[isDisable:edge,isEconomy:edge].$2)) {SysClk:2	React:Passenger	Cond:Passenger.hasDanger=='false',Passenger.traffic=='false'	Rand:true};

%rule r_traffic_gatelounge Airport.($0 | Security.($1 | Passenger[isDisable:edge,isEconomy:edge].$2) | GateLounge.$3) -> Airport.($0 | Security.$1 | GateLounge.($3 | Passenger[isDisable:edge,isEconomy:edge].$2)) {SysClk:2	React:Passenger	Cond:Passenger.hasDanger=='false',Passenger.traffic=='true'	Rand:true};

%rule r_enter_gatelounge Airport.($0 | ShoppingZone.($1 | Passenger[isDisable:edge,isEconomy:edge].$2) | GateLounge.$3) -> Airport.($0 | ShoppingZone.$1 | GateLounge.($3 | Passenger[isDisable:edge,isEconomy:edge].$2)) {SysClk:2	React:Passenger	Rand:true};

%rule r_onboard Airport.($0 | GateLounge.($1 | Passenger[isDisable:edge,isEconomy:edge].$2) | Airplane.$3) -> Airport.($0 | GateLounge.$1 | Airplane.($3 | Passenger[isDisable:edge,isEconomy:edge].$2)) {SysClk:0	React:Passenger	Cond:ap.boardingTime-SysClk<10&&ap.boardingTime-SysClk>5,Passenger.flightNo==ap.flightNo};

%rule r_take_off Airport.($0 | Airplane.$1) -> Airport.$0 | Airplane.$1 {SysClk:0	Cond:ap.boardingTime==SysClk};

%agent p1:Passenger[isDisable:edge,isEconomy:edge].(t1:Ticket[idle] | c1:CheckinLuggage | d1:Danger) | a:Airport.(c:Checkin | s:Security | sz:ShoppingZone | gl:GateLounge | ap:Airplane);
